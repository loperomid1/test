#!/usr/bin/env python3

import os
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

try:
    from app import app
    from models import db
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üîß –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    sys.exit(1)

def load_env():
    env_file = Path('.env')
    if env_file.exists():
        try:
            from dotenv import load_dotenv
            load_dotenv()
            print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env")
        except ImportError:
            print("‚ö†Ô∏è  python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-dotenv")
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞: {e}")
    else:
        print("‚ÑπÔ∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")

def check_database():
    with app.app_context():
        try:
            from sqlalchemy import text
            result = db.session.execute(text('SELECT 1')).scalar()
            
            if result != 1:
                print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                return False
            
            try:
                from sqlalchemy import inspect
                inspector = inspect(db.engine)
                tables = inspector.get_table_names()
                
                if 'ssh_servers' not in tables:
                    print("üóÑÔ∏è  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
                    db.create_all()
                    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                else:
                    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
            except Exception as table_error:
                print("üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª–∏...")
                try:
                    from models import SSHServer
                    SSHServer.query.count()
                    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
                except Exception as model_error:
                    print("üóÑÔ∏è  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
                    db.create_all()
                    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python init_db.py init")
            return False
    
    return True

def show_config_info():
    config_name = os.environ.get('FLASK_CONFIG', 'default')
    debug_mode = app.config.get('DEBUG', False)
    db_uri = app.config.get('SQLALCHEMY_DATABASE_URI', '–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
    
    print("\n" + "="*50)
    print("üöÄ SSH Manager - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ")
    print("="*50)
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_name}")
    print(f"üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'–í–∫–ª—é—á–µ–Ω' if debug_mode else '–û—Ç–∫–ª—é—á–µ–Ω'}")
    print(f"üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_uri}")
    print(f"üîß SSH —Ç–∞–π–º–∞—É—Ç: {app.config.get('SSH_TIMEOUT', 10)} —Å–µ–∫")
    print(f"‚ö° –ú–∞–∫—Å. –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {app.config.get('SSH_MAX_WORKERS', 20)}")
    print("="*50)

def check_dependencies():
    required_packages = ['flask', 'flask_sqlalchemy', 'paramiko', 'requests']
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö: pip install " + " ".join(missing_packages))
        return False
    
    return True

def create_directories():
    directories = ['uploads', 'database', 'logs']
    
    for directory in directories:
        dir_path = Path(directory)
        if not dir_path.exists():
            dir_path.mkdir(exist_ok=True)
            print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ SSH Manager...")
    
    if not check_dependencies():
        sys.exit(1)
    
    create_directories()
    
    load_env()
    
    show_config_info()
    
    if not check_database():
        sys.exit(1)
    
    host = os.environ.get('FLASK_HOST', '127.0.0.1')
    port = int(os.environ.get('FLASK_PORT', 5000))
    debug = app.config.get('DEBUG', False)
    
    print(f"\nüåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://{host}:{port}")
    
    if debug:
        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!")
    
    print("\nüî• –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    print("   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("="*50)
    
    try:
        app.run(
            host=host,
            port=port,
            debug=debug,
            threaded=True
        )
    except KeyboardInterrupt:
        print("\n\nüëã –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    except OSError as e:
        if "Address already in use" in str(e):
            print(f"\n‚ùå –ü–æ—Ä—Ç {port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!")
            print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
            print(f"   1. –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç –≤ .env —Ñ–∞–π–ª–µ")
            print(f"   2. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
            print(f"   3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç: set FLASK_PORT=5001 && python run.py")
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()